1.Необязательное задание: можно посмотреть целый фильм в консоли telnet towel.blinkenlights.nl:)
   
2.Узнайте о том, сколько действительно независимых (не пересекающихся) каналов есть в разделяемой среде Wi-Fi при работе на 2.4 ГГц. Стандарты с полосой 5 ​​ГГц более актуальны, но регламенты на 5-м административном округе различаются в разных странах. В качестве дополнительного вопроса вне зачета, iOS найти актуальный ответ и на этот вопрос.
Ответ:
2.4GHz
Всего 14 каналов, 
С учетом того, что в стандарте предуссмотрена разная ширина канала : 10, 20, 22, 40, 80 и 160 МГц, основные 20 и 40 используются
при ширне канала = 40 МГц, всего 3 непересекающихся канала: 1,6,11.
каналы шириной 80 и 160 МГц в диапазон 2.4 ГГц, не имеют не пересекающихся каналов.

В разных странах разрешенные разные 
По разрешенным каналам в РФ:
20Мгц - 17 каналов
40Мгц - 8
80Мгц - 4
160Мгц -1
если в сети работает хотябы одно устройство на 160МГц , то больше каналов нет

3.Адрес канального уровня - MAC адрес - это 6 байт, первые 3 из которых называются OUI - уникальный идентификатор организации. Какому производителю принадлежит MAC 38:f9:d3:55:55:79?
Ответ:
p@p:~/1$ wget http://standards-oui.ieee.org/oui/oui.txt
@p:~/1$ ls
oui.txt
p@p:~/1$ mv oui.txt oui.txt
mv: 'oui.txt' и 'oui.txt' - один и тот же файл
p@p:~/1$ mv oui.txt oui.sh
p@p:~/1$ bash oui.sh 38:f9:d3:55:55:79
oui.sh: строка 1: OUI/MA-L: Нет такого файла или каталога
oui.sh: строка 2: company_id: команда не найдена
oui.sh: строка 3: Address: команда не найдена
oui.sh: строка 4: $'\r': команда не найдена
oui.sh: строка 5: синтаксическая ошибка рядом с неожиданным маркером «hex»
oui.sh: строка 5: `00-22-72   (hex)		Americ'n Micro-Fuel Device Corp.
p@p:~/1$ mv oui.sh oui.txt
p@p:~/1$ bash oui.txt 38:f9:d3:55:55:79
oui.txt: строка 1: OUI/MA-L: Нет такого файла или каталога
oui.txt: строка 2: company_id: команда не найдена
oui.txt: строка 3: Address: команда не найдена
oui.txt: строка 4: $'\r': команда не найдена
oui.txt: строка 5: синтаксическая ошибка рядом с неожиданным маркером «hex»
oui.txt: строка 5: `00-22-72   (hex)		Americ'n Micro-Fuel Device Corp.



4.Каким будет полезная нагрузка TCP сегмента, если Ethernet MTU задан в 9001 байт, размер заголовков IPv4 - 20 байт, а TCP - 32 байта?
Ответ:
TCP Segment = 8981 (MTU - Ethernet Header)

5.Может ли во флагах TCP одновременно быть установлены флаги SYN и FIN в штатном режиме работы сети? Почему да или нет?
Ответ:
Не могут, так как SYN - начинает соединение, а FIN завершает,
SYN (1 бит). Начинает соединение и синхронизирует порядковые номера. Первый пакет, отправленный с каждой стороны, должен в обязательном порядке иметь установленным этот флаг.
FIN (1 бит). Одна из конечных точек отправляет пакет с установленным флагом FIN для другой конечной точки, чтобы сообщить, что все пакеты были отправлены, и соединение пора завершить.

6.ss -ula sport = :53 на хосте имеет следующий вывод:

Состояние Recv-Q Send-Q Local Address: Port Peer Address: Port Process
UNCONN 0 0 127.0.0.53% lo: домен 0.0.0.0: *
В почему StateПрисутствует только UNCONN, и может ли там присутствовать, например, TIME-WAIT?
Ответ:
UNCONN - соединение не установлено,
Time-wait - это состояние когда сокет отправил подтверждение о получении завершения соединение и ждет, что сообщение доставлено.
Так как -u говорит нам про вывод UDP порта, а он не использует предварительные пакеты для соеинения и синхронизации, 
следовательно и для разрыва соединения ему не нужно ждать завершения сессии.
Могло быть еще ESTAB -  при наличии установленного соединения. 


7.Как штатным образом завершается соединение (FIN от инициатора, FIN-ACK от ответчика, ACK от инициатора), опишите в какие состояния будет находиться соединение TCP в каждый момент времени на клиенте и на сервере при завершении. Схема переходов состояния соединения вам в этом поможет.
Ответ:

                    Client           Server 
                 ESTABLESHED      ESTABLESHED
1. >> FIN        FIN WAIT 1   >   CLOSE WAIT
2. << FIN-ACC    FIN WAIT 2   >   CLOSE WAIT 
3. >> ACK        TIME WAIT    <   LAST ACK
                 CLOSED       >   CLOSED


8.TCP порт - 16 битное число. Предположим, 2 в одной сети хоста устанавливают между собой соединения. Каким будет максимальное число подключений, ограниченное только одним клиентом L4. Сколько соединений сможет обслужить сервер от одного клиента? А если клиентов больше одного?
Ответ:

 
Максимальное число портов 65535 (макс значение в 16 бит)
Максимальное число подключений от одного клиента для сервера может быть  65535 

Один клиент не может открыть более 65535
Если клиентов больше одного все равно не более 65535


9.Может ли существовать ситуация, при которой большое число соединений TCP на хосте находится в состоянии TIME-WAIT? Если да, то является ли она хорошей или плохой? Подкрепите свой ответ пояснением той или иной оценки.
Ответ:
Да может, при частом соединении и отсоединении.

TIME-WAIT - наступает в ходе разрыва соединения.
TIME_WAIT может исчерпать пространство эфемерного порта, если неоднократно и часто подключаться между одними и теми же двумя адресами IP. Это влияет только на эту конкретную пару адресов IP и не повлияет на установление соединений с другими хостами. При частом соединении и отсоединении. При частом соединении и отключении создается соединение и соотвествено выделяется каждый раз порт
и предыдущая сессия какое-то время находится в "карантине", новая сессия может начаться раньше чем будет закрыта предудущая 
и при большом числе соединений такое может вызвать накопление соединение и расход соответсвующих ресурсов.
А если все соеднения идут к одной службе, то может так же возникнуть ситуация когда кончаться порты. 

10.Чем особенно плоха фрагментация UDP относительно фрагментации TCP?
Ответ:

Если один из фрагментов не дойдет, то необходимо перепослать весь пакет занова, 
но в UDP нет контроля ошибок, и как следствие информация не дойдет.
TCP пакеты точно отправляются.




11.Если бы вы строили систему удаленного сбора логов, то есть систему, в которой несколько хостов отправляют на центральный узел генерируемые приложениями логи (предположим, что логи - текстовая информация), какой протокол транспортного уровня вы выбрали бы и почему? Проверьте ваше предположение самостоятельно, узнав о стандартном протоколе syslog.
Ответ:
Я бы спользовал TCP, так как есть механизм гарантированной доставки пакетов, чего нет в UDP, а для логов это самое важное.
logstash использует TCP (http)


12.Сколько портов TCP находится в состоянии прослушивания вашей машины в Ubuntu, и каким процессам они принадлежат?
Ответ:
p@p:~/1$ sudo ss  state listening -t -p
[sudo] пароль для p: 
Recv-Q Send-Q Local Address:Port    Peer Address:Port Process                                               
0      4096   127.0.0.53%lo:domain       0.0.0.0:*     users:(("systemd-resolve",pid=505,fd=13))            
0      128          0.0.0.0:ssh          0.0.0.0:*     users:(("sshd",pid=823,fd=3))                        
0      5          127.0.0.1:ipp          0.0.0.0:*     users:(("cupsd",pid=663,fd=7))                       
0      4096       127.0.0.1:38809        0.0.0.0:*     users:(("containerd",pid=813,fd=12))                 
0      4096       127.0.0.1:8125         0.0.0.0:*     users:(("netdata",pid=1210,fd=38))                   
0      4096       127.0.0.1:19999        0.0.0.0:*     users:(("netdata",pid=1210,fd=4))                    
0      511          0.0.0.0:http         0.0.0.0:*     users:(("nginx",pid=832,fd=6),("nginx",pid=831,fd=6))
0      128             [::]:ssh             [::]:*     users:(("sshd",pid=823,fd=4))                        
0      5              [::1]:ipp             [::]:*     users:(("cupsd",pid=663,fd=6))                       
0      4096               *:3000               *:*     users:(("grafana-server",pid=1199,fd=8))             
0      4096               *:9090               *:*     users:(("prometheus",pid=1211,fd=8))                 
0      4096               *:2377               *:*     users:(("dockerd",pid=1198,fd=19))                   
0      4096               *:7946               *:*     users:(("dockerd",pid=1198,fd=27))                   
0      4096               *:9100               *:*     users:(("dockerd",pid=1198,fd=56))                   
0      511             [::]:http            [::]:*     users:(("nginx",pid=832,fd=7),("nginx",pid=831,fd=7))

прослушиваемых портов = 7 
процессы - systemd, sshdб, cupsd, containerd, netdata, netdata, nginx



13.Какой ключ нужно добавить в tcpdump, чтобы он начал выводить не только заголовки, но и содержимое фреймов в текстовом виде? А в текстовом и шестнадцатиричном?
Ответ:
tcpdump -A - выведет содержание в ASCII (в тексте)
p@p:~/1$ sudo tcpdump -A -c 1
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on docker_gwbridge, link-type EN10MB (Ethernet), capture size 262144 bytes

tcpdump -x - выведет соедржимое пакетов в hex
p@p:/$ sudo tcpdump -x -c 1
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on docker_gwbridge, link-type EN10MB (Ethernet), capture size 262144 bytes
23:31:20.514758 IP 172.18.0.5.50717 > mygpon.domain: 40240+ A? grafana.com. (29)
	0x0000:  4500 0039 9c32 4000 4011 2fc4 ac12 0005
	0x0010:  c0a8 01fe c61d 0035 0025 6ef4 9d30 0100
	0x0020:  0001 0000 0000 0000 0767 7261 6661 6e61
	0x0030:  0363 6f6d 0000 0100 01
1 packet captured
5 packets received by filter
0 packets dropped by kernel







14.Попробуйте собрать трафик с помощью основного интерфейса tcpdumpвашей виртуальной машины и посмотреть его через tshark или Wireshark (можно ограничить число пакетов -c 100). Встретились ли вам какие-то установленные флаги Интернет-протокол (не флаги TCP, а флаги IP)? Узнайте, какие флаги бывают. Как на самом деле называется стандарт Ethernet, фреймы которого попали в ваш дамп? Можно ли где-то в дампе увидеть OUI?
Ответ:

Встретил флаги IP: Don't fragment(второй бит 0 1 0), 
Всего 3 бита:
    0 - зарезервиравано, всегда 0,
    1 - указывает на фрагментирование , 0 - разрешена фрагментация, 1 - нет
    2 - указывает на конец фрагментированных пакетов , 1 - не последний фрагмент (актуально для 1го бита = 0)
Ethernet называется Ethernet II

В дампе OUI можно увидеть в заголовке Ethernet пакета в виде короткого имени и ID (часть MACа)
например: Destination: HonHaiPr_8c:ed:c5 (c0:38:96:8c:ed:c5)




